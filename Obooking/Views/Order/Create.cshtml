@model Obooking.Models.MakeOrder

@{
    ViewData["Title"] = "Create";

}
@{Layout = "";}



@using (Html.BeginForm("Create", "Order", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.book.BookId)
    <div class="container">
        <div class="box">
            <div class="images">
                <div class="img-holder active">
                    <img src="~/images/@Model.book.ImageBook" height="150" />
                </div>
                <div class="img-holder">
                    <img src="~/images/@Model.book.ImageBook" height="150" />
                </div>
                <div class="img-holder">
                    <img src="~/images/@Model.book.ImageBook" height="150" />
                </div>
                <div class="img-holder">
                    <img src="~/images/@Model.book.ImageBook" height="150" />
                </div>
            </div>
            <div class="basic-info">
                <h1>@Model.book.BookName</h1>               
                <span>Price: @Model.book.BookPrice</span>
            </div>
            <div class="description">
                <p>Description: @Model.book.BooKDescription</p>
                <ul class="features">
                    <li><i class="fa-solid fa-circle-check"></i>Popularity: @Model.book.BookPopularity</li>
                    <li><i class="fa-solid fa-circle-check"></i>Count: @Model.book.BookCount</li>
                    <li><i class="fa-solid fa-circle-check"></i>Popularity: @Model.book.BookPopularity</li>
                    <li><i class="fa-solid fa-circle-xmark"></i>Status: @Model.book.BookStatus</li>
                    <li>
                        <i class="fa-solid fa-circle-xmark"></i>
                        <div class="text">
                            Quantity:
                            <div type="text">
                                @Html.EditorFor(model => model.OrderDetails.quantity, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </li>
                    <li>
                        <i class="fa-solid fa-circle-xmark"></i>
                        <button type="submit" onclick="location.href = '@Url.Action("Create", "Order" , FormMethod.Post)'">Add To Cart </button>
                    </li>
                </ul>             
            </div>
        </div>
    </div>

}


<style>
    :root {
        --primary-color: #90e0ef;
        --secondary-color: #00b4d5;
        --tertiary-color: #0077b6;
        --yellow-color: #ffb900;
        --gray-color: #808080;
    }

    * {
        box-sizing: border-box;
        font-family: 'Source Sans Pro', sans-serif;
        line-height: 1;
        padding: 0;
        margin: 0;
    }

    .container {
        background-color: var(--primary-color);
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .box {
        background-color: white;
        border-radius: 10px;
        box-shadow: 5px 5px 10px 1px rgb(0, 0, 0, 12%);
        padding: 45px;
        margin: 15px 0;
        width: 950px;
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: auto 1fr;
        grid-template-areas:
            "images info"
            "images description";
        grid-gap: 35px;
    }

    .box .images {
        grid-area: images;
        display: grid;
        grid-template-columns: repeat(3, auto);
        grid-template-rows: auto 1fr;
        grid-template-areas:
            "active active active"
            "idle idle idle";
        grid-gap: 5px;
    }

    .box .images .img-holder img {
        width: 100%;
        display: block;
        border-radius: 10px;
    }

    .box .images .img-holder.active {
        grid-area: active;
    }

    .box .images .img-holder:not(.active):hover {
        opacity: 0.95;
        cursor: pointer;
    }

    .box .basic-info {
        grid-area: info;
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

          

    .box .basic-info span {
        font-weight: 800;
        font-size: 25px;
    }

    .box .description .features button {
        color: white;
        background-color: var(--secondary-color);
        display: inline-block;
        padding: 10px 15px;
        text-decoration: none;
        font-weight: 600;
        font-size: 12px;
        border-radius: 5px;
        margin-left: 250px;
    }

    .box .description .features button:hover {
        background-color: var(--tertiary-color);
    }

    .box .description {
        grid-area: description;
        display: flex;
        flex-direction: column;
        gap: 25px;
    }

    .box .description p {
        color: var(--gray-color);
        font-size: 14px;
        line-height: 1.5;
    }

    .box .description .features {
        list-style: none;
        display: flex;
        flex-direction: column;
        gap: 10px;
        color: var(--gray-color);
    }

    .box .description .features i {
        margin-right: 5px;
    }

    .box .description .features .fa-circle-check {
        color: var(--tertiary-color);
    }

    .box .description .features .fa-circle-xmark {
        color: var(--yellow-color);
    }




    .box input[type = "text"], .box input[type = "password"] {
        border: 0;
        background: none;
        display: block;
        margin: 20px auto;
        text-align: center;
        border: 2px solid #3498db;
        padding: 14px 10px;
        width: 200px;
        outline: none;
        color: black;
        border-radius: 24px;
        transition: 0.25s;
    }

    .box .description .features input[type = "text"]:focus, .box .description .features input[type = "password"]:focus {
        width: 240px;
        border-color: #2ecc71;
    }
</style>
